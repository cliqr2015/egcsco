{
  "displayName": "Swarm Service",
  "repositories": [],
  "parentServiceId": "110",
  "serviceActions": [],
  "bundleLocation": "",
  "images": [],
  "serviceParamSpecs": [
    {
      "scope": null,
      "displayName": "Swarm Hostname",
      "helpText": "IP or Hostname of your swarm.",
      "valueList": null,
      "paramName": "swarmIp",
      "valueConstraint": {
        "maxLength": 255,
        "sizeValue": 0,
        "calloutWorkflowName": null,
        "step": 0,
        "minValue": 0,
        "maxValue": 0,
        "regex": null,
        "allowSpaces": true
      },
      "userEditable": true,
      "optional": false,
      "userVisible": true,
      "systemParam": true,
      "type": "string",
      "defaultValue": "",
      "collectionList": [],
      "dataUnit": null,
      "webserviceListParams": null,
      "confirmValue": "",
      "pathSuffixValue": "",
      "exampleValue": null
    },
    {
      "scope": null,
      "displayName": "Image",
      "helpText": "Image to use for your swarm service.",
      "valueList": null,
      "paramName": "swarmImage",
      "valueConstraint": {
        "maxLength": 255,
        "sizeValue": 0,
        "calloutWorkflowName": null,
        "step": 0,
        "minValue": 0,
        "maxValue": 0,
        "regex": null,
        "allowSpaces": true
      },
      "userEditable": true,
      "optional": false,
      "userVisible": true,
      "systemParam": true,
      "type": "string",
      "defaultValue": "",
      "collectionList": [],
      "dataUnit": null,
      "webserviceListParams": null,
      "confirmValue": "",
      "pathSuffixValue": "",
      "exampleValue": null
    },
    {
      "scope": null,
      "displayName": "Swarm Port",
      "helpText": "Port your swarm is listening on.",
      "valueList": null,
      "paramName": "swarmPort",
      "valueConstraint": {
        "maxLength": 255,
        "sizeValue": 0,
        "calloutWorkflowName": null,
        "step": 0,
        "minValue": 0,
        "maxValue": 0,
        "regex": null,
        "allowSpaces": true
      },
      "userEditable": true,
      "optional": false,
      "userVisible": true,
      "systemParam": true,
      "type": "string",
      "defaultValue": "",
      "collectionList": [],
      "dataUnit": null,
      "webserviceListParams": null,
      "confirmValue": "",
      "pathSuffixValue": "",
      "exampleValue": null
    },
    {
      "scope": null,
      "displayName": "Git Tag",
      "helpText": "Tag or Branch you want to use code from.",
      "valueList": null,
      "paramName": "gitTag",
      "valueConstraint": {
        "maxLength": 255,
        "sizeValue": 0,
        "calloutWorkflowName": null,
        "step": 0,
        "minValue": 0,
        "maxValue": 0,
        "regex": null,
        "allowSpaces": true
      },
      "userEditable": true,
      "optional": false,
      "userVisible": true,
      "systemParam": true,
      "type": "string",
      "defaultValue": "swarm",
      "collectionList": [],
      "dataUnit": null,
      "webserviceListParams": null,
      "confirmValue": "",
      "pathSuffixValue": "",
      "exampleValue": null
    },
    {
      "scope": null,
      "displayName": "Exposed Port",
      "helpText": "The port exposed by your container.",
      "valueList": null,
      "paramName": "exposedPort",
      "valueConstraint": {
        "maxLength": 255,
        "sizeValue": 0,
        "calloutWorkflowName": null,
        "step": 0,
        "minValue": 0,
        "maxValue": 0,
        "regex": null,
        "allowSpaces": true
      },
      "userEditable": true,
      "optional": false,
      "userVisible": true,
      "systemParam": true,
      "type": "string",
      "defaultValue": "",
      "collectionList": [],
      "dataUnit": null,
      "webserviceListParams": null,
      "confirmValue": "",
      "pathSuffixValue": "",
      "exampleValue": null
    },
    {
      "scope": null,
      "displayName": "Published Port",
      "helpText": "The port on your swarm to map to the exposed port inside the container. This port must be unique on your swarm.",
      "valueList": null,
      "paramName": "publishedPort",
      "valueConstraint": {
        "maxLength": 255,
        "sizeValue": 0,
        "calloutWorkflowName": null,
        "step": 0,
        "minValue": 0,
        "maxValue": 0,
        "regex": null,
        "allowSpaces": true
      },
      "userEditable": true,
      "optional": false,
      "userVisible": true,
      "systemParam": true,
      "type": "string",
      "defaultValue": "",
      "collectionList": [],
      "dataUnit": null,
      "webserviceListParams": null,
      "confirmValue": "",
      "pathSuffixValue": "",
      "exampleValue": null
    },
    {
      "scope": null,
      "displayName": "Replicas",
      "helpText": "How many replicas of the container you want to run on your swarm.",
      "valueList": null,
      "paramName": "swarmReplicas",
      "valueConstraint": {
        "maxLength": 255,
        "sizeValue": 0,
        "calloutWorkflowName": null,
        "step": 0,
        "minValue": 0,
        "maxValue": 0,
        "regex": null,
        "allowSpaces": true
      },
      "userEditable": true,
      "optional": false,
      "userVisible": true,
      "systemParam": true,
      "type": "string",
      "defaultValue": "",
      "collectionList": [],
      "dataUnit": null,
      "webserviceListParams": null,
      "confirmValue": "",
      "pathSuffixValue": "",
      "exampleValue": null
    }
  ],
  "externalBundleLocation": "",
  "parentService": false,
  "servicePorts": [],
  "systemService": false,
  "description": "",
  "visible": true,
  "egressRestrictions": [],
  "defaultImageName": null,
  "serviceType": "EXTERNAL",
  "externalActions": [
    {
      "actionName": "START",
      "actionType": "URL",
      "actionValue": "https://raw.githubusercontent.com/datacenter/cloudcenter-content/%gitTag%/services/swarm/deployToSwarm/swarm.sh start"
    },
    {
      "actionName": "STOP",
      "actionType": "URL",
      "actionValue": "https://raw.githubusercontent.com/datacenter/cloudcenter-content/%gitTag%/services/swarm/deployToSwarm/swarm.sh stop"
    }
  ],
  "perms": [
    "write",
    "read",
    "administration",
    "delete"
  ],
  "costPerHour": 0.0,
  "logoPath": "/assets/img/appTiers/swarm/logo.png",
  "childServices": [],
  "name": "swarm",
  "externalService": false
}